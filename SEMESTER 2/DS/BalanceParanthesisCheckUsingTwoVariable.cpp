#include<bits/stdc++.h>
using namespace std;
/*
Time complexity: O(n) per test case: As we traverse the whole string
Space complexity: O(1) as only two variables are used for all test cases
*/
//Returns true on balanced paranthesis and false on invalid paranthesis
bool check_bal_parenthesis(string s){

	//left for '{' and right for '}'
	int left=0,right=0;
	for(int i=0; i<s.length(); i++){
		//If left paran
		if(s[i]=='{') left++;
		//If right paran is obtained and we have left paran for that right paran
		else if(s[i]=='}' and left>0) left--;
		//If we dont have left paran for right paran
		else if(s[i]=='}') right++;
	}
	//Both must be zero for balanced paranthesis
	return left==0 && right==0;
}
int main()
{
  
	//Specifying number of test cases
	int t;
	cin>>t;
	while(t--){
		//String generated by compiler
		string s;
		cin>>s;
		//Calling our check balanced paranthesis function
		cout<<check_bal_parenthesis(s)<<endl;
	}

	return 0;

}
